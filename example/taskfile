#!/bin/bash

# these are the examples
BEZ=${EXAMPLE}/bez
MOTION=${EXAMPLE}/motion
WHEEL=${EXAMPLE}/wheel

WEBPACK=../node_modules/.bin/webpack
WEBPACK_ARGS="--devtool source-map --module-bind js=babel-loader babel-polyfill "

function public:lint {
	public:clean ${1}
	esw $1 -c ../.eslintrc.json
	# esw $1 --fix -c ../.eslintrc.json
}

function public:build {
	${WEBPACK}  ${WEBPACK_ARGS} ${1}/main.js ${1}/${1}_bundle.js
}

function public:watch {
	${WEBPACK} -w    ${WEBPACK_ARGS} ${1}/main.js ${1}/${1}_bundle.js
}

function public:clean {
	rm -fv ${1}/*bundle*
}

## all
function public:ex_clean {
	./taskfile bez_clean
	./taskfile motion_clean
	./taskfile wheel_clean
	./taskfile game_clean
}

function public:ex_lint {
	./taskfile bez_lint
	./taskfile motion_lint
	./taskfile wheel_lint
	./taskfile game_lint
}

function public:ex_build {
	./taskfile bez_build
	./taskfile motion_build
	./taskfile wheel_build
	./taskfile game_build
}

# ------------------------------------------
# DEFAULT public: list all possible commands
#
function public:help {
		echo "$0 <task> <args>"
		echo "Tasks:"
		compgen -A function | sed -En 's/public:(.*)/\1/p' | cat -n
}

# ---------- Do NOT edit below --------------
ALL_LIST="bez motion wheel game"
SUBCMD=$1
NBRARGS=$#
shift 1

if [ ${NBRARGS} == "1" ] || [ $1 == "all" ]
then
	# implements command like ./taskfile build
	# without the qualifying 'all'
	for i in ${ALL_LIST}
	do
		# echo doing ${SUBCMD} ${i}
		public:${SUBCMD} ${i}
	done
else
	public:${SUBCMD} ${@}
fi

# time "public:${SUBCMD} ${@}"  # make help default

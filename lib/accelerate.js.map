{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 6691c66e2ee26a9e15e9","webpack:///./src/bezier-accelerator.js","webpack:///./src/bezier-cubic.js","webpack:///./src/bezier-functions.js","webpack:///./src/bezier-quadratic.js","webpack:///./src/index.js","webpack:///./~/newton-raphson/index.js"],"names":["BezierAccelerator","v0","vF","tF","dF","cb","V","T","D","P0","P1","P2","P3","callBack","p1_x","p1_y","func","complete","t","res","elapsed_time","getDistance","x_value","Error","y_value","BezierCubic","p0","p1","p2","p3","quadratic","bezFunc","derivative","CubicBezier","QuadraticBezier","bezObj","functionOfX","xValue","f","xFromT","fPrime","xFromTDerivative","tValue","yValue","yFromT","console","log","BezierQuadratic","linear","logger","s","Accelerate","options","undefined","defaults","timeInterval","allowOverwrite","actual","Object","assign","time","elapsedTimeChangingVelocity","totalDistance","changingVelocity","bezAccelerator","currentVelocity","deltaTime","_advanceTimeAndDistanceWhileCoasting","tmp","deltaDistance","distanceBeforeVelocityChange","timeForChange","newVelocity","resolvePromiseFunction","v","delay","Promise","resolve","reject","kill","resolvePromise","distanceForChange","window","exports"],"mappings":"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","file":"accelerate.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"accelerate\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"accelerate\"] = factory();\n\telse\n\t\troot[\"accelerate\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6691c66e2ee26a9e15e9","import { QuadraticBezier, CubicBezier } from './bezier-functions';\n\n/*\n*   @TODO\n*   -   there is a lot of duplicate code in here in the handling of the different cases.\n*       can wind a lot of it into one piece\n*   -   need a general tidyup of names and code nolonger used\n*   - this needs a good tidy-up and reworking into ES6 style - but thats for later\n*/\n\n/**\n * This class performs velocity changes on objects in 1-dimensional motion\n *\n * provides a single method getDistance(t) - will change name to positionAfter(t) at some point\n * that returns the total distance traveled since after t seconds of the velocity change\n *\n * It does NOT keep track of the moving object outside of the velocity change window\n *\n * Elapsed time is measured from the start of the velocity change\n *\n * You can only use one of these objects once. Once the velocity change is complete\n * any call to getPositionAfter will result in an error\n\n * @class  BezDecelerator (name)\n * @param  {number}                   v0  Initial velocity\n * @param  {number}                   vF  Final velocity\n * @param  {number}                   tF  Final time\n * @param  {number}                   dF  Final distance\n * @param  {Function=}                 cb  Completion handler\n * @return {(Array|Function|number)}  { description_of_the_return_value }\n */\n\nexport default class BezierAccelerator\n{\n    constructor(v0, vF, tF, dF, cb)\n    {\n        // just changing the notation to what I am using\n        const V = v0;\n        const T = tF;\n        const D = dF;\n        let P0 = [],\n            P1 = [],\n            P2 = [],\n            P3 = [];\n\n        this.callBack = cb;\n\n        if ((v0 > 0) && (vF == 0) && ((T * v0) > (D)))\n        {\n            // this is the one special case where a cubic will not do the job\n            P0 = [0.0, 0.0];\n            P2 = [T, D];\n            const p1_x = (D - vF * T) / (v0 - vF);\n            const p1_y = (v0 * p1_x);\n\n            this.func = QuadraticBezier(P0, [p1_x, p1_y], P2);\n        }\n        else\n        {\n            P0 = [0.0, 0.0];\n            P1 = [T / 3.0, V * T / 3.0];\n            P2 = [(2.0 / 3.0) * T, D - vF * T / 3.0];\n            P3 = [T, D];\n            this.func = CubicBezier(P0, P1, P2, P3);\n        }\n\n        this.complete = false;\n\n        this.V = v0;\n        this.vF = vF;\n        this.T = tF;\n        this.D = dF;\n\n        this.P0 = P0;\n        this.P1 = P1;\n        this.P2 = P2;\n        this.P3 = P3;\n    }\n\n    tangent_initial(t)\n\t{\n        return this.V * t;\n    }\n\n    dotPositions()\n    {\n        return [this.P0, this.P1, this.P2, this.P3];\n    }\n\n\t/*\n    * this function draws the trajectory of the final velocity.Used only for debugging and demonstration\n    * not part of the final exposed package\n    */\n    tangent_final(t)\n\t{\n        const res =  this.vF * t + (this.D - this.vF * this.T);\n\n        return res;\n    }\n\n    getPositionAfter(elapsed_time)\n    {\n        return this.getDistance(elapsed_time);\n    }\n\n    /*\n    * This is the only exposed method of the class that is not simply for debugging.\n    *\n    * x_value {float} - a number in the range  0..tF the elapsed time of the velocity change\n    *\n    * Returns {float} - the distance traveled since the start of the velocity change\n    */\n    getDistance(x_value)\n    {\n        if (this.complete)\n        {\n            throw new Error('Accelerator: velocity change is complete. Cannot call this function');\n        }\n\n        if ((x_value >= this.T) && (!this.complete))\n        {\n            this.complete = true;\n            if ((typeof this.callBack === 'function'))\n            {\n                this.callBack();\n            }\n        }\n\n        const y_value = this.func(x_value);\n\n        return y_value;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/bezier-accelerator.js","/**\n * Class for bezier cubic class.\n */\nexport class BezierCubic\n{\n    /**\n     * Constructs the object.\n     *\n     * @param  {<type>}  P0  Inital Point\n     * @param  {<type>}  P1  First attraction point\n     * @param  {<type>}  P2  Second attraction point\n     * @param  {<type>}  P3  End point\n     */\n    constructor(P0, P1, P2, P3)\n    {\n        this.P0 = P0;\n        this.P1 = P1;\n        this.P2 = P2;\n        this.P3 = P3;\n    }\n\n    /**\n     * @private\n     */\n    derivative(t, p0, p1, p2, p3)\n    {\n        function quadratic(p0, p1, p2, t)\n        {\n            const res = (p0 * (1.0 - t) * (1.0 - t)) + (2.0 * p1 * (1.0 - t) * t) + (p2 * t * t);\n\n            return res;\n        }\n        const res = 3.0 * (quadratic(p1, p2, p3, t) - quadratic(p0, p1, p2, t));\n\n        return res;\n    }\n    /**\n     * @private\n     */\n    bezFunc(t, p0, p1, p2, p3)\n    {\n        const res =   p0 * (1 - t) * (1 - t) * (1 - t)\n                    + 3.0 * p1 * (1 - t) * (1 - t) * t\n                    + 3.0 * p2 * (1 - t) * t * t\n                    + p3 * t * t * t;\n\n        return res;\n    }\n\n    xFromT(t)\n    {\n        const res = this.bezFunc(t, this.P0[0], this.P1[0], this.P2[0], this.P3[0]);\n\n        return res;\n    }\n\n    xFromTDerivative(t)\n    {\n        const res = this.derivative(t, this.P0[0], this.P1[0], this.P2[0], this.P3[0]);\n\n        return res;\n    }\n\n    yFromT(t)\n    {\n        const res = this.bezFunc(t, this.P0[1], this.P1[1], this.P2[1], this.P3[1]);\n\n        return res;\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/bezier-cubic.js","import { BezierCubic } from './bezier-cubic';\nimport { BezierQuadratic } from './bezier-quadratic';\nimport newtonRaphson from 'newton-raphson';\n\n/*\n* @TODO\n*   -    better first guesses for newton-raphson\n*/\n/*\n* The key thing happening here is to convert a parameterized Bezier function\n* into a function of x\n*/\n\n/**\n * This function returns a function which is a bezier Cubic curve as a\n * function of x so that (x, f(x)) is a point on the bezier curve.\n * Bezier functions are defined as curves (x(t), y(t)) for a parameter t between 0 .. 1\n * but cannot be rephrased as (x, f(x)). Getting itin this f(x) form takes computational work\n *\n * @class  CubicBezier (name)\n * @param  {<type>}                      P0  The p 0\n * @param  {<type>}                      P1  The p 1\n * @param  {<type>}                      P2  The p 2\n * @param  {<type>}                      P3  The p 3\n * @return {(Array|BezierCubic|number)}  { description_of_the_return_value }\n */\nexport function CubicBezier(P0, P1, P2, P3)\n{\n    const bezObj = new BezierCubic(P0, P1, P2, P3);\n\n    // const parametricFunc = function (t)\n    // {\n    //     return [bezObj.xFromT(t), bezObj.yFromT(t)];\n    // };\n\n    function functionOfX(xValue)\n    {\n        // find the t value that corresponds to the x value\n        // get it by newton raphson\n\n        function f(t)\n        {\n            return (bezObj.xFromT(t) - xValue);\n        }\n        function fPrime(t)\n        {\n            return bezObj.xFromTDerivative(t);\n        }\n\n        const tValue = newtonRaphson(f, fPrime, 0.5, null);\n\n        if (tValue === false)\n        {\n            throw new Error('cannot find t for x in CubicBezier');\n        }\n        // const checkXValue = bezObj.xFromT(tValue);\n        // console.log(`xValue: ${xValue}  tValue: ${tValue} checkXValue: ${checkXValue}`)\n\n        // let xValue = bezObj.xFromT(t)\n        const yValue = bezObj.yFromT(tValue);\n\n        if (yValue === 0)\n        {\n            console.log('CubicBezier: yValue is zero');\n        }\n\n        return yValue;\n    }\n\n    return functionOfX;\n}\n/**\n * This function returns a function which is a bezier Quadratuc curve as a\n * function of x so that (x, f(x)) is a point on the bezier curve\n *\n * @class  QuadraticBezier (name)\n * @param  {<type>}                          P0  The p 0\n * @param  {<type>}                          P1  The p 1\n * @param  {<type>}                          P2  The p 2\n * @return {(Array|BezierQuadratic|number)}  { description_of_the_return_value }\n */\nexport function QuadraticBezier(P0, P1, P2)\n {\n    const bezObj = new BezierQuadratic(P0, P1, P2);\n\n    // find the t value that corresponds to the x value\n    // get it by newton raphson\n\n    // const parametricFunc = function (t)\n    // {\n    //     return [bezObj.xFromT(t), bezObj.yFromT(t)];\n    // };\n\n    function functionOfX(xValue)\n    {\n        function f(t)\n        {\n            return (bezObj.xFromT(t) - xValue);\n        }\n\n        function fPrime(t)\n        {\n            return bezObj.xFromTDerivative(t);\n        }\n\n        const tValue = newtonRaphson(f, fPrime, 0.5, null);\n\n        if (tValue === false)\n        {\n            console.log([P0, P1, P2]);\n            throw new Error(`cannot find t for x in QuadraticBezier xValue:${xValue}`);\n        }\n        // const checkXValue = bezObj.xFromT(tValue);\n        // console.log(`xValue: ${xValue}  tValue: ${tValue} checkXValue: ${checkXValue}`)\n\n        // let x = bezObj.xFromT(t);\n        const yValue = bezObj.yFromT(tValue);\n\n        if (yValue === 0)\n        {\n            console.log('CubicBezier: yValue is zero');\n        }\n\n        return yValue;\n    }\n\n    return functionOfX;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/bezier-functions.js","/**\n * Class for bezier quadratic class.\n */\nexport class BezierQuadratic\n{\n    /**\n     * Constructs the object.\n     *\n     * @param  {Float}  P0  Initial point\n     * @param  {Float}  P1  Attraction point\n     * @param  {Float}  P2  End point\n     */\n    constructor(P0, P1, P2)\n    {\n        this.P0 = P0;\n        this.P1 = P1;\n        this.P2 = P2;\n    }\n\n    derivative(t, p0, p1, p2)\n    {\n        function linear(p0, p1, t)\n        {\n            const res = (p0 * (1.0 - t)) + (p1 * t);\n\n            return res;\n        }\n\n        const res = 2.0 * (linear(p1, p2, t) - linear(p0, p1, t));\n\n        return res;\n    }\n\n    bezFunc(t, p0, p1, p2)\n    {\n        const res =   (p0 * (1 - t) * (1 - t)) + (2.0 * p1 * (1 - t) * t) + (p2 * t * t);\n\n        return res;\n    }\n\n    xFromT(t)\n    {\n        const res = this.bezFunc(t, this.P0[0], this.P1[0], this.P2[0]);\n\n        return res;\n    }\n\n    xFromTDerivative(t)\n    {\n        const res = this.derivative(t, this.P0[0], this.P1[0], this.P2[0]);\n\n        return res;\n    }\n\n    yFromT(t)\n    {\n        const res = this.bezFunc(t, this.P0[1], this.P1[1], this.P2[1]);\n\n        return res;\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/bezier-quadratic.js","import BezierAccelerator from './bezier-accelerator.js';\n\nfunction logger(s) // eslint-disable-line\n{\n    // console.log(s)\n}\n/*\n* TODO\n*   -   does not correctly support advancing by a time interval that jumps over the end of an acceleration\n*   -   the calc of velocity during an acceleration is crude and probably can be made more accurate\n*/\n\n/**\n * This class seeks to keep track of the 1 dimensional motion of an object that is subject to\n * multiple velocity changes.\n *\n * The two relevant properties of this object are position and velocity which can be obtained\n * at any time with methods position() and velocity()\n *\n * A starting velocity is set via the constructor.\n *\n * Time is advanced, and the position and velocity updated, by calling the method advanceTimeBy(timeInterval)\n * with a timeInterval or deltaTime which is a time interval since the last update and is in SECONDS not FRAMES\n *\n * An acceleration (either positive or negative) can be scheduled by calling the method accelerate(vF, tF, dF)\n * this call will have no effect on the position or velocity until the next call to advanceTimeBy\n * That method will apply the acceleration on successive calls until the ending condition is encountered\n * tF seconds of acceleration have elapsed AND the body has traveled dF distance during the acceleration\n *\n * On finishing the acceleration the advanceTimeBy() method will call the resolve() function\n * of the promise returned by call to accelerate() that setup the acceleration\n */\nexport default class Accelerate\n{\n    /**\n     * Constructs the object.\n     *\n     * @param  {Float}  v0       The initial Velocity\n     * @param  {Object}  options  The options\n     */\n    constructor(v0, options = {})\n    {\n        if (v0 === null || v0 === undefined || typeof v0 !== 'number')\n        {\n            throw new Error('Initial velocity not defined');\n        }\n\n        const defaults = {\n            timeInterval: 1 / 60, // @FIX this is going away\n            allowOverwrite: false,\n        };\n\n        const actual = Object.assign({}, defaults, options);\n\n        this.timeInterval = actual.timeInterval;\n        this.allowOverwrite = actual.allowOverwrite;\n\n        this.time = 0.0;\n        this.elapsedTimeChangingVelocity = 0.0;\n        this.totalDistance = 0.0;\n        this.changingVelocity = false;\n        this.bezAccelerator = null;\n        this.currentVelocity = v0;\n    }\n\n    /**\n     * Advance the moving objects time by a time interval\n     *\n     * @param  {Float}  deltaTime  Interval since the last call to this method\n     * @return {Float}  Total distance traveled after this time interbal is\n     *                  added to total time of travel. Just for convenience as\n     *                  could get this with position()\n     */\n    advanceTimeBy(deltaTime)\n    {\n        if (!this.changingVelocity)\n        {\n            this._advanceTimeAndDistanceWhileCoasting(deltaTime);\n        }\n        else\n        {\n            this.time += deltaTime;\n            this.elapsedTimeChangingVelocity += deltaTime;\n\n            const tmp = this.bezAccelerator.getDistance(this.elapsedTimeChangingVelocity);\n            const deltaDistance = (this.distanceBeforeVelocityChange + tmp) - this.totalDistance;\n\n            this.currentVelocity = deltaDistance / (deltaTime);\n            this.totalDistance = this.distanceBeforeVelocityChange + tmp;\n\n            logger(\n                `Mover::advanceByTime  elapsedTimeChangingVelocity: ${this.elapsedTimeChangingVelocity}`\n                + ` timeForChange: ${this.timeForChange}`\n                + ` DVdistance: ${tmp} `\n                + ` totalDistance: ${this.totalDistance}`\n                + `velocity: ${this.currentVelocity}`);\n\n            if (this.elapsedTimeChangingVelocity >= this.timeForChange)\n            {\n                logger(`Mover::advanceTimeBy::velocity increase DONE newVelocity:${this.newVelocity}`);\n                this.currentVelocity = this.newVelocity;\n                this.changingVelocity = false;\n                if (typeof this.resolvePromiseFunction === 'function')\n                {\n                    this.resolvePromiseFunction();\n                }\n            }\n        }\n\n        return this.totalDistance;\n    }\n\n    /**\n     * Gets the current position of the moving object\n     *\n     * @return {Float}  returns the current position of the moving object\n     */\n    position()\n    {\n        return this.totalDistance;\n    }\n\n    /**\n     * Gets the current velocity of the moving object\n     *\n     * @return {Float}  returns the current velocity of the moving object\n     */\n    velocity()\n    {\n        return this.currentVelocity;\n    }\n\n    /**\n     * Sets the velocity. This cannot bet set during an acceleration\n     *\n     * @param  {Float}  v  The currenct velocity\n     */\n    setVelocity(v)\n    {\n        if (this.changingVelocity)\n        {\n            throw new Error('cannot setVelocity during an acceleration');\n        }\n        this.currentVelocity = v;\n    }\n\n    /**\n     * Instructs the object to start a velocity change\n     *\n     * @param  {Float}    vF     is the velocity the object is to change to\n     * @param  {Float}    tF     is the time interval over which the change is\n     *                           to take place\n     * @param  {Float}    dF     is the distance that the object should move\n     *                           while changing velocity\n     * @param  {Float=}   delay  The delay before starting\n     * @return {Promise}  Promise which will be resolved when the acceleration\n     *                    has completed\n     */\n    accelerate(vF, tF, dF, delay)\n    {\n        logger(`Mover::accelerate ${vF} ${tF} ${dF}`);\n\n        return new Promise((resolve, reject) =>\n        {\n            // if one is already running\n            if (this.changingVelocity && !this.allowOverwrite)\n            {\n                reject('cannot have two accelerations underway at the same time');\n\n                return;\n            }\n\n            this.kill(); // overwrite an existing animation\n\n            this.resolvePromise = resolve;\n\n            const v0 = this.currentVelocity;\n\n            this.distanceBeforeVelocityChange = this.totalDistance;\n            this.changingVelocity = true;\n            this.elapsedTimeChangingVelocity = 0.0;\n            this.timeForChange = tF;\n            this.newVelocity = vF;\n            this.distanceForChange = dF;\n\n            this.bezAccelerator = new BezierAccelerator(v0, vF, tF, dF, () =>\n            {\n                this.currentVelocity = this.newVelocity;\n                this.kill();\n            });\n        });\n    }\n\n    /**\n     * kills ongoing acceleration at currentVelocity\n     */\n    kill()\n    {\n        this.changingVelocity = false;\n        if (typeof this.resolvePromise === 'function')\n        {\n            this.resolvePromise();\n            this.resolvePromise = undefined;\n        }\n    }\n\n    /**\n     * Advances total time & distance when NO acceleration is active\n     *\n     * @private\n     * @param  {Float}  deltaTime  The delta time\n     */\n    _advanceTimeAndDistanceWhileCoasting(deltaTime)\n    {\n        this.time += deltaTime;\n        this.totalDistance += this.currentVelocity * deltaTime;\n        logger(`\\nMover::advanceTimeBy_VelocityNotChanging `\n            + ` velocity:${this.currentVelocity}`\n            + ` distance:${this.totalDistance}`\n            + ` time: ${this.time}`\n            + `deltaTime:${deltaTime}`);\n    }\n\n}\n\nwindow.Accelerate = exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.newtonRaphson = factory();\n  }\n}(this, function () {\n  return function findRoot(f, fprime, guess, options) {\n    options = options || {};\n    var tolerance = options.tolerance || 0.00000001;\n    var epsilon = options.epsilon || 0.0000000000001;\n    var maxIterations = options.maxIterations || 20;\n    var haveWeFoundSolution = false; \n    var newtonX;\n   \n    for (var i = 0; i < maxIterations; ++i) {\n      var denominator = fprime(guess);\n      if (Math.abs(denominator) < epsilon) {\n        return false\n      }\n   \n      result = guess - (f(guess) / denominator);\n      \n      var resultWithinTolerance = Math.abs(result - guess) < tolerance;\n      if (resultWithinTolerance) { \n        return result\n      }\n\n      guess = result;\n    }\n    \n    return false;\n  }\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/newton-raphson/index.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}
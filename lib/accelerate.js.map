{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 87fd056b9082b7422afc","webpack:///./src/accelerator.js","webpack:///./src/bez_functions.js","webpack:///./src/bezier_cubic.js","webpack:///./src/bezier_quadratic.js","webpack:///./src/index.js","webpack:///./~/newton-raphson/index.js"],"names":["BezDecelerator","Decelerator","v0","vF","tF","dF","cb","V","T","D","P0","P1","P2","P3","func","threshold","complete","callBack","p1_x","p1_y","p2_x","p2_y","alpha","P1_adj","P2_adj","Error","tangent_initial","t","bind","tangent_final","res","getPositionAfter","elapsed_time","getDistance","x_value","y_value","CubicBezier","bezObj","parametricFunc","x_From_t","y_From_t","functionOfX","f","fPrime","x_From_t_derivative","t_value","check_x_value","console","log","QuadraticBezier","Q","p0","p1","p2","BezierCubicClass","p3","bez_func","derivative","L","BezierQuadraticClass","logger","s","Mover","signature","time","elapsedTimeChangingVelocity","timeInterval","totalDistance","changingVelocity","decelerator","currentVelocity","deltaTime","advanceTimeBy_VelocityNotChanging","tmp","deltaDistance","distanceBeforeVelocityChange","timeForChange","newVelocity","resolvePromiseFunction","p","Promise","resolve","distanceForChange","numberOfFrames","advanceTimeBy","advanceTimeByFrames","window","ACCELERATE","exports"],"mappings":"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","file":"accelerate.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"accelerate\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"accelerate\"] = factory();\n\telse\n\t\troot[\"accelerate\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 87fd056b9082b7422afc","\nimport {QuadraticBezier, CubicBezier} from \"./bez_functions\"\n\n/**\n* This class performs velocity changes on objects in 1-dimensional motion\n*\n* v0 {float} - initial velocity units/time\n* vF {float} - final velocity\n* tF {float} - time interval over which velocity is to change, units are seconds\n* dF {float} - the distance over which the velocity change is to take place\n*\n* provides a single method getDistance(t) - will change name to positionAfter(t) at some point\n* that returns the total distance traveled since after t seconds of the velocity change\n*\n* It does NOT keep track of the moving object outside of the velocity change window\n*\n* Elapsed time is measured from the start of the velocity change\n*\n* You can only use one of these objects once. Once the velocity change is complete\n* any call to getPositionAfter will result in an error\n*\n* @TODO - this needs a good tidy-up and reworking into ES6 style - but thats for later\n*/\nexport const BezDecelerator = function Decelerator(v0, vF, tF, dF, cb)\n{\n\t// just changing the notation to what I am using\n    var V = v0;\n    var T = tF;\n    var D = dF;\n    let P0 = [], P1 = [], P2 = [], P3 = [];\n    let func;\n    const threshold = 0.1;\n    let complete = false;\n    let callBack = cb;\n\n\n    if( v0 == 0 )\n\t{\n        // throw new Error('zero initial velocity not implemented');\n\t\tlet P0 = [0.0, 0.0]\n\t\tlet P1 = [T/3.0, 0]\n\t\tlet P3 = [T, D]\n        let P2 = [(2.0/3.0)*T, D - vF*T/3.0]\n        func = CubicBezier(P0, P1, P2, P3);\n    } \n\t// Terminal velocity is zero - fit with quadratic\n    else if( vF ==  0)\n\t{\n        let P0 = [0.0,0.0];\n        let P2 = [T,D];\n        let P1 = [D/V, D];\n        func = QuadraticBezier(P0, P1, P2);\n    }\n\t// terminal velocity is low enough (slower than D/T) to simply slow down gradually to achieve goal\n\t// hence can fit with a quadratic bezier\n    else if( (vF > 0) && ((D - vF*T) >= (threshold * D) ) )\n\t{\n        let P0 = [0.0,0.0];\n        let P2 = [T,D];\n        let p1_x = (D - vF*T)/(v0 - vF);\n        let p1_y = (v0*p1_x);\n        func = QuadraticBezier(P0, [p1_x, p1_y], P2);\n    }\n\t// terminal velocity higher than D/T or only just a little bit less that D/T \n\t// and hence requires some speed up towards the end\n\t// needs a cubic bezier to fit\n    else if( (vF > 0) && ((D - vF*T) <=  (1.0 * threshold * D) ) )\n\t{\n        let P0 = [0.0, 0.0];\n        if(true){\n            let P1 = [T/3.0, V*T/3.0]\n            let P3 = [T,D];\n            let P2 = [(2.0/3.0)*T, D - vF*T/3.0]\n            func = CubicBezier(P0, P1, P2, P3);\n        }else{\n            // this does not work\n            let P1 = [D/V, D];\n            let P3 = [T,D];\n            let p2_x = T - D/vF; \n            let p2_y = 0.0; \n            let P2 = [p2_x, p2_y];\n            let alpha = .75;\n\n            let P1_adj = [P1[0]*alpha, P1[1]*alpha];\n\n    \t\t// attempts to add a stretch factor .. seems to work for alpha 0.0 .. 1.0\n            let P2_adj = [T - D*alpha/vF, D*(1.0 - alpha)]; // alpha 0 .. 1\n\n            func = CubicBezier(P0, P1_adj, P2_adj, P3);\n        }\n    }\n\t// terminal velocity is close to D/T and simply produces a straightline equal to D/T \n\t// does not seem like a good answer\n\t// THIS SHOULD BE OBSOLETE\n    else if( (vF > 0) && ((D - vF*T) <= (threshold * D) ) && ((D - vF*T) >=  (-1.0 * threshold * D) ) )\n\t{\n        throw new Error('dont know what to do with these velocities');\n        let P0 = [0.0, 0.0];\n        // let P1 = [D/V, D];\n        if( true ){\n            let P1 = [T/3.0, V*T/3.0]\n            let P3 = [T,D];\n            let P2 = [(2.0/3.0)*T, D - vF*T/3.0]\n            func = CubicBezier(P0, P1, P2, P3); \n        } else{\n            // this does not work\n            let p2_x = T - D/vF; \n            let p2_y = 0.0; \n            let P2 = [p2_x, p2_y];\n            let alpha = .75;\n\n            let P1_adj = [P1[0]*alpha, P1[1]*alpha];\n\n    \t\t// attempts to add a stretch factor .. seems to work for alpha 0.0 .. 1.0\n            let P2_adj = [T - D*alpha/vF, D*(1.0 - alpha)]; // alpha 0 .. 1\n\n            func = CubicBezier(P0, P1_adj, P2_adj, P3);\t\n        }\n    }\n\t// should not be any more cases\n    else\n\t{\n        throw new Error('dont know what to do -- not implemented');\n    }\n\t\n\t/*\n    * this function is the trajectory of the initial velocity. Used only for debugging and demonstration\n    * not part of the final exposed package\n    */\n    this.tangent_initial = function(t)\n\t{\n        return V*t;\n    }.bind(this);\n\n\t/* \n    * this function draws the trajectory of the final velocity.Used only for debugging and demonstration\n    * not part of the final exposed package\n    */\n    this.tangent_final = function(t)\n\t{\n        let res =  vF*t + (D - vF*T);\n        return res;\n    }.bind(this);\n\n    this.getPositionAfter = function(elapsed_time)\n    {\n        return this.getDistance(elapsed_time)\n    }.bind(this)\n    /*\n    * This is the only exposed method of the class that is not simply for debugging.\n    *\n    * x_value {float} - a number in the range  0..tF the elapsed time of the velocity change \n    *\n    * Returns {float} - the distance traveled since the start of the velocity change\n    */\n    this.getDistance = function(x_value)\n    {\n        if( this.complete){\n            throw new Error(\"Accelerator: velocity change is complete. Cannot call this function\")\n        }\n        if( (x_value >= T) && (! complete)) {\n            complete = true\n            if( (typeof callBack == \"function\" ) && (callBack != null) )\n                callBack()\n        }\n        let y_value = func(x_value)\n        return y_value\n    }.bind(this)\n\t\n\n};\n// module.exports = BezDecelerator;\n\n\n\n// WEBPACK FOOTER //\n// ./src/accelerator.js","import {BezierCubicClass} from \"./bezier_cubic\"\nimport {BezierQuadraticClass} from \"./bezier_quadratic\"\nimport newtonRaphson from \"newton-raphson\"\n\n/*\n* @TODO\n*   -    better first guesses for newton-raphson\n*/\n/*\n* The key thing happening here is to convert a parameterized Bezier function\n* into a function of x\n*/\n\n/* \n* This function returns a function which is a bezier Cubic curve as a\n* function of x so that (x, f(x)) is a point on the bezier curve.\n* Bezier functions are defined as curves (x(t), y(t)) for a parameter t between 0 .. 1\n* but cannot be rephrased as (x, f(x)). Getting itin this f(x) form takes computational work\n*/\nexport const CubicBezier = function CubicBezier(P0, P1, P2, P3)\n{\n    let bezObj = new BezierCubicClass(P0, P1, P2, P3)\n\n    let parametricFunc = function(t)\n    {\n        return [bezObj.x_From_t(t), bezObj.y_From_t(t)]\n    }\n\n    let functionOfX = function(x_value)\n    {\n        // find the t value that corresponds to the x value\n        // get it by newton raphson\n\n        let f = function(t)\n        {\n            return ( bezObj.x_From_t(t) - x_value )  \n        }\n        let fPrime = function(t)\n        {\n            return bezObj.x_From_t_derivative(t)\n        }\n\n        let t_value = newtonRaphson(f, fPrime, 0.5, null)\n        if( t_value === false){\n            throw new Error(\"cannot find t for x in CubicBezier\")\n        }\n        let check_x_value = bezObj.x_From_t(t_value)\n        // console.log(`x_value: ${x_value}  t_value: ${t_value} check_x_value: ${check_x_value}`)\n\n        // let x_value = bezObj.x_From_t(t)\n        let y_value = bezObj.y_From_t(t_value);\n        if(y_value == 0){\n            console.log(`CubicBezier: y_value is zero`)\n        }\n        return y_value\n    };\n\n    return functionOfX;\n}\n/*\n* This function returns a function which is a bezier Quadratuc curve as a\n* function of x so that (x, f(x)) is a point on the bezier curve\n*/\nexport const QuadraticBezier = function QuadraticBezier(P0, P1, P2)\n {\n    let bezObj = new BezierQuadraticClass(P0, P1, P2)\n\n    // find the t value that corresponds to the x value\n    // get it by newton raphson\n\n    let parametricFunc = function(t)\n    {\n        return [bezObj.x_From_t(t), bezObj.y_From_t(t)]\n    }\n\n    let functionOfX = function(x_value)\n    {\n        let f = function(t)\n        {\n            return ( bezObj.x_From_t(t) - x_value )  \n        }\n        let fPrime = function(t)\n        {\n            return bezObj.x_From_t_derivative(t)\n        }\n\n        let t_value = newtonRaphson(f, fPrime, 0.5, null)\n        if( t_value === false){\n            throw new Error(\"cannot find t for x in QuadraticBezier\")\n        }\n        let check_x_value = bezObj.x_From_t(t_value)\n        // console.log(`x_value: ${x_value}  t_value: ${t_value} check_x_value: ${check_x_value}`)\n\n        // let x = bezObj.x_From_t(t);\n        let y_value = bezObj.y_From_t(t_value);\n        if(y_value == 0){\n            console.log(`CubicBezier: y_value is zero`)\n        }\n        return y_value\n    };\n\n    return functionOfX;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/bez_functions.js","/*\n* This file implements a class which provides a Cubic Bezier curve and its derivative\n*/\n\n// this function is the first derivative of the cubic bezier. Needed for x_From_t_derivative\nfunction Q(p0, p1, p2, t)\n{\n    let res = p0*(1.0-t)*(1.0-t) + 2.0*p1*(1.0-t)*t + p2 * t*t\n    return res \n}\n\nexport class BezierCubicClass \n{\n    constructor(P0, P1, P2, P3){\n        this.P0 = P0\n        this.P1 = P1\n        this.P2 = P2\n        this.P3 = P3\n    }\n    // private\n    derivative(t, p0, p1, p2, p3)\n    {\n        let res = 3.0 * (Q(p1,p2,p3, t) - Q(p0, p1, p2, t))\n        return res;\n    }\n    // private\n    bez_func(t, p0, p1, p2, p3)\n    {\n        var res =   p0*(1-t)*(1-t)*(1-t) \n                    + 3.0 * p1 * (1-t)*(1-t)*t \n                    + 3.0 * p2 * (1 - t)* t * t \n                    + p3*t*t*t;\n        return res;\n    }\n\n    x_From_t(t)\n    {\n        let res = this.bez_func(t, this.P0[0], this.P1[0], this.P2[0], this.P3[0])\n        return res\n    }\n\n    x_From_t_derivative(t)\n    {\n        let res = this.derivative(t, this.P0[0], this.P1[0], this.P2[0], this.P3[0])\n        return res\n    }\n\n    y_From_t(t)\n    {\n        let res = this.bez_func(t, this.P0[1], this.P1[1], this.P2[1], this.P3[1])\n        return res\n    }\n    // currently not used\n    point_From_t()\n    {\n        let res = [this.x_From_t(t), this.y_From_t(t)]\n        return res\n    }\n} \n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/bezier_cubic.js","\n// this function is the first derivative of the quadratic bezier. Needed for x_From_t_derivative\nfunction L(p0, p1, t)\n{\n    let res = p0*(1.0 - t) + p1*t\n    return res \n}\n\nexport class BezierQuadraticClass\n{\n    constructor(P0, P1, P2){\n        this.P0 = P0\n        this.P1 = P1\n        this.P2 = P2\n    }\n    derivative(t, p0, p1, p2)\n    {\n        let res = 2.0 * (L(p1,p2, t) - L(p0, p1, t))\n        return res;\n    }\n\n    bez_func(t, p0, p1, p2)\n    {\n        var res =   p0*(1-t)*(1-t) + 2.0 * p1 * (1-t)*t + p2 * t * t \n        return res;\n    }\n\n    x_From_t(t)\n    {\n        let res = this.bez_func(t, this.P0[0], this.P1[0], this.P2[0])\n        return res\n    }\n\n    x_From_t_derivative(t)\n    {\n        let res = this.derivative(t, this.P0[0], this.P1[0], this.P2[0])\n        return res\n    }\n\n    y_From_t(t)\n    {\n        let res = this.bez_func(t, this.P0[1], this.P1[1], this.P2[1])\n        return res\n    }\n\n    point_From_t()\n    {\n        let res = [this.x_From_t(t), this.y_From_t(t)]\n        return res\n    }\n} \n\n\n\n\n// WEBPACK FOOTER //\n// ./src/bezier_quadratic.js","import {BezDecelerator} from \"./accelerator.js\"\n\nfunction logger(s)\n{\n    //console.log(s)\n}\n/*\n* TODO\n*   -   does not correctly support advancing by a time interval that jumps over the end of an acceleration\n*   -   the calc of velocity during an acceleration is crude and probably can be made more accurate\n*/\n\n/*\n* This class seeks to keep track of the 1 dimensional motion of an object that is subject to\n* multiple velocity changes.\n*\n* The two relevant properties of this object are position and velocity which can be obtained\n* at any time with methods position() and velocity()\n*\n* A starting velocity is set via the constructor.\n*\n* Time is advanced, and the position and velocity updated, by calling the method advanceTimeBy(timeInterval)\n* with a timeInterval or deltaTime which is a time interval since the last update and is in SECONDS not FRAMES\n*\n* An acceleration (either positive or negative) can be scheduled by calling the method accelerate(vF, tF, dF)\n* this call will have no effect on the position or velocity until the next call to advanceTimeBy\n* That method will apply the acceleration on successive calls until the ending condition is encountered\n* tF seconds of acceleration have elapsed AND the body has traveled dF distance during the acceleration\n*\n* On finishing the acceleration the advanceTimeBy() method will call the resolve() function\n* of the promise returned by call to accelerate() that setup the acceleration\n*\n*\n*   -   accelerate(v0, vF, tF, dF) - instructs the object to start a velocity change\n*           v0 - is current velocity and is unnecessary since the moving object knows its current velocity\n*           vF - is the velocity the object is to change to\n*           tF - is the time interval over which the change is to take place\n*           dF - is the distance that the object should move while changing velocity\n*       returns a ES6 promise\n*/\nexport default class Mover\n{\n\n    constructor(v0)\n    {\n        this.signature = \"Mover\"\n        this.time = 0.0;\n        this.elapsedTimeChangingVelocity = 0.0\n        this.timeInterval = 1.0/60.0 // @FIX this is going away\n        this.totalDistance = 0.0\n        this.changingVelocity = false\n        this.decelerator = null\n        this.currentVelocity = v0\n    }\n    /*\n    * Advance the moving objects time by a time interval\n    *\n    *   deltaTime {float} - interval since the last call to this method\n    *\n    *   returns {float} -   total distance traveled after this time interbal is added to total time\n    *                       of travel. Just for convenience as could get this with position()\n    */\n    advanceTimeBy(deltaTime)\n    {\n        if( ! this.changingVelocity ){\n            this.advanceTimeBy_VelocityNotChanging(deltaTime)\n        }else {\n            this.time += deltaTime\n            this.elapsedTimeChangingVelocity += deltaTime\n\n            let tmp = this.decelerator.getDistance(this.elapsedTimeChangingVelocity)\n            let deltaDistance = (this.distanceBeforeVelocityChange + tmp) - this.totalDistance\n\n            this.currentVelocity = deltaDistance / (deltaTime)\n            this.totalDistance = this.distanceBeforeVelocityChange + tmp\n\n            logger(\n                `Mover::advanceByTime  elapsedTimeChangingVelocity: ${this.elapsedTimeChangingVelocity}`\n                +` timeForChange: ${this.timeForChange}`\n                +` DVdistance: ${tmp} `\n                +` totalDistance: ${this.totalDistance}`\n                + `velocity: ${this.currentVelocity}`)\n\n            if( this.elapsedTimeChangingVelocity >= this.timeForChange )\n            {\n                logger(`Mover::advanceTimeBy::velocity increase DONE newVelocity:${this.newVelocity}`)\n                this.currentVelocity = this.newVelocity\n                this.changingVelocity = false\n                if( typeof this.resolvePromiseFunction == \"function\")\n                    this.resolvePromiseFunction()\n            }\n        }\n        return this.totalDistance\n    }\n    /*\n    * returns {float} the current position of the moving object\n    */\n    position()\n    {\n        return this.totalDistance\n    }\n    /*\n    * returns {float} the current velocity of the moving object\n    */\n    velocity()\n    {\n        return this.currentVelocity\n    }\n    /*\n    *   accelerate(vF, tF, dF, cb) - instructs the object to start a velocity change\n    *           vF - is the velocity the object is to change to\n    *           tF - is the time interval over which the change is to take place\n    *           dF - is the distance that the object should move while changing velocity\n    *\n    *   returns a ES6 Promise which will be resolved when the acceleration has completed\n    */\n    accelerate(vF, tF, dF)\n    {\n        logger(`Mover::accelerate ${vF} ${tF} ${dF}`)\n        if( this.changingVelocity ){\n            throw new Error(\"cannot have two accelerations underway at the same time\")\n        }\n        let v0 = this.currentVelocity\n        let p = new Promise(function(resolve){\n            this.resolvePromiseFunction = resolve\n        }.bind(this))\n        this.distanceBeforeVelocityChange = this.totalDistance\n        this.changingVelocity = true\n        this.elapsedTimeChangingVelocity = 0.0\n        this.timeForChange = tF\n        this.newVelocity = vF\n        this.distanceForChange = dF\n        this.decelerator = new BezDecelerator(v0, vF, tF, dF)\n        return p\n    }\n\n    /*\n    * Internal only - advances time when no acceleration is active\n    */\n    advanceTimeBy_VelocityNotChanging(deltaTime)\n    {\n        this.time += deltaTime\n        this.totalDistance += this.currentVelocity * deltaTime\n        logger(`Mover::advanceTimeBy_VelocityNotChanging velocity:`\n            +` ${this.currentVelocity} distance:${this.totalDistance} time: ${this.time}`)\n    }\n\n/////////////// below here will disappear\n\n    // ONLY    HERE DURING TRANSITION TO DELTA TIME\n    advanceTimeByFrames(numberOfFrames)\n    {\n        logger(`Mover::advanceTimeByFrames:numberOfFrames: ${numberOfFrames} time:${this.time}`)\n        let deltaTime = numberOfFrames * this.timeInterval\n        this.advanceTimeBy(deltaTime)\n    }\n\n    // ONLY    HERE DURING TRANSITION TO DELTA TIME\n    /*\n    * @TODO - change parameter to deltaTime in seconds - this thing should know nothing about\n    * frames and display issues.\n    */\n    getDistance(numberOfFrames)\n    {\n        this.advanceTimeByFrames(numberOfFrames)\n        return this.totalDistance\n    }\n\n    // ONLY    HERE DURING TRANSITION TO DELTA TIME\n    /*\n    * @TODO - change parameter to deltaTime in seconds - this thing should know nothing about\n    * frames and display issues.\n    */\n    getDistanceVelocityNotChanging(numberOfFrames)\n    {\n        this.time += this.timeInterval*numberOfFrames\n        this.totalDistance += this.currentVelocity*this.timeInterval*numberOfFrames\n        return this.totalDistance\n    }\n}\n\n\nwindow.ACCELERATE = exports;\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.newtonRaphson = factory();\n  }\n}(this, function () {\n  return function findRoot(f, fprime, guess, options) {\n    options = options || {};\n    var tolerance = options.tolerance || 0.00000001;\n    var epsilon = options.epsilon || 0.0000000000001;\n    var maxIterations = options.maxIterations || 20;\n    var haveWeFoundSolution = false; \n    var newtonX;\n   \n    for (var i = 0; i < maxIterations; ++i) {\n      var denominator = fprime(guess);\n      if (Math.abs(denominator) < epsilon) {\n        return false\n      }\n   \n      result = guess - (f(guess) / denominator);\n      \n      var resultWithinTolerance = Math.abs(result - guess) < tolerance;\n      if (resultWithinTolerance) { \n        return result\n      }\n\n      guess = result;\n    }\n    \n    return false;\n  }\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/newton-raphson/index.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}